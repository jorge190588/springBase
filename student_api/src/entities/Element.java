package entities;
// Generated Jun 14, 2018 7:26:08 PM by Hibernate Tools 5.1.0.Alpha1

import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Element generated by hbm2java
 */
@Entity
@Table(name = "element")
public class Element implements java.io.Serializable {

	private int id;
	private ElementType elementType;
	private Entiti entiti;
	private String idelement;
	private String label;
	private Boolean required;
	private String pattern;
	private String patternMessage;
	private Date createdAt;
	private Date updatedAt;

	public Element() {
	}

	public Element(int id, ElementType elementType, Entiti entiti, String idelement, String label) {
		this.id = id;
		this.elementType = elementType;
		this.entiti = entiti;
		this.idelement = idelement;
		this.label = label;
	}

	public Element(int id, ElementType elementType, Entiti entiti, String idelement, String label, Boolean required,
			String pattern, String patternMessage, Date createdAt, Date updatedAt) {
		this.id = id;
		this.elementType = elementType;
		this.entiti = entiti;
		this.idelement = idelement;
		this.label = label;
		this.required = required;
		this.pattern = pattern;
		this.patternMessage = patternMessage;
		this.createdAt = createdAt;
		this.updatedAt = updatedAt;
	}

	@Id

	@Column(name = "id", unique = true, nullable = false)
	public int getId() {
		return this.id;
	}

	public void setId(int id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "elementTypeId", nullable = false)
	public ElementType getElementType() {
		return this.elementType;
	}

	public void setElementType(ElementType elementType) {
		elementType.setElements(null);
		this.elementType = elementType;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "entitiId", nullable = false)
	public Entiti getEntiti() {
		return this.entiti;
	}

	public void setEntiti(Entiti entiti) {
		entiti.setElements(null);
		this.entiti = entiti;
	}

	@Column(name = "idelement", nullable = false, length = 50)
	public String getIdelement() {
		return this.idelement;
	}

	public void setIdelement(String idelement) {
		this.idelement = idelement;
	}

	@Column(name = "label", nullable = false, length = 100)
	public String getLabel() {
		return this.label;
	}

	public void setLabel(String label) {
		this.label = label;
	}

	@Column(name = "required")
	public Boolean getRequired() {
		return this.required;
	}

	public void setRequired(Boolean required) {
		this.required = required;
	}

	@Column(name = "pattern", length = 100)
	public String getPattern() {
		return this.pattern;
	}

	public void setPattern(String pattern) {
		this.pattern = pattern;
	}

	@Column(name = "patternMessage", length = 150)
	public String getPatternMessage() {
		return this.patternMessage;
	}

	public void setPatternMessage(String patternMessage) {
		this.patternMessage = patternMessage;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created_at", length = 23)
	public Date getCreatedAt() {
		return this.createdAt;
	}

	public void setCreatedAt(Date createdAt) {
		this.createdAt = createdAt;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "updated_at", length = 23)
	public Date getUpdatedAt() {
		return this.updatedAt;
	}

	public void setUpdatedAt(Date updatedAt) {
		this.updatedAt = updatedAt;
	}

}
